@page "/fetchdata"
@using SampleApp.Web.Data
@using SampleApp.Orders.Client.Records
@inject WeatherForecastService ForecastService
@inject OrdersService Orders

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (_orders == null)
{
     <p>
          <em>Loading...</em>
     </p>
}
else
{
     <button class="btn btn-primary" @onclick="SubmitOrder">
          New Order
     </button>
     <button class="btn btn-primary" @onclick="LoadOrders">
          Load Orders
     </button>
     <br />
     <br />

     <table class="table">
          <thead>
               <tr>
                    <th>ID</th>
                    <th>CreatedOn</th>
                    <th>Number</th>
               </tr>
          </thead>
          <tbody>
               @foreach (var order in _orders)
               {
                    <tr>
                         <td>@order.Id</td>
                         <td>@order.CreatedOn?.ToShortDateString()</td>
                         <td>@order.Number</td>
                    </tr>
               }
          </tbody>
     </table>
}

@code {
     private IEnumerable<OrderRecord> _orders;

     protected override async Task OnInitializedAsync()
     {
          await LoadOrdersAsync();
     }

     private async Task SubmitOrder(MouseEventArgs e)
     {
          await Orders.SubmitOrderAsync();
          await LoadOrdersAsync();
     }

     private async Task LoadOrders(MouseEventArgs e)
     {
          await LoadOrdersAsync();
     }

     private async Task LoadOrdersAsync()
     {
          _orders = await Orders.Orders();
     }

}